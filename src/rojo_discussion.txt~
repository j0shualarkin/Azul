    When we started the project we searched for previous work done with Azul and
artificial intelligence. There we stumbled across discussion of Monte Carlo Tree Search, 
neural network approaches, and the Rojo AI. The Rojo AI is an implementation of the game
in JavaScript, along with a function that chooses the best move for a player.
We implemented our AI in a really good programming language: Racket.
We made a Racket implementation of the Rojo move picker in order to test our
own AI against another one.
    The Rojo AI:
      Determines which stage lines are non-empty and figures out how many are needed to fill them,
      as well as what the score would be upon placing if they were filled. Compute an estimated score
      for each line. Then increment/decrement the score based on how many tiles are available and how
      they would affect your score -- i.e. go down if taking overflow/1tile or go up if taking a safe
      amount of tiles

    Our heuristic: 


What is rojo?

How do we use rojo?

